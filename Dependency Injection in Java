//Student class File
package firstspring;

/**
 * @author Abhishek
 *
 */
public class Student {

	private String name;
	public String getName()
	{
		return name;
	}
	public String setName(String name)
	{
		this.name = name;
	}
	public void displayInfo()
	{
		System.out.println("Hello" + " " + name);
	}
}

//applicationContext.xml file
<?xml version="1.0" encoding="UTF-8"?>  
<beans  
    xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:p="http://www.springframework.org/schema/p"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
               http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">  
  
<bean id="studentbean" class="firstspring.Student">  
<property name="name" value="Abhishek Swamy"></property>  
</bean>  
  
</beans>  

//Test class
package firstspring;

import org.springframework.beans.factory.BeanFactory;  

import org.springframework.beans.factory.xml.XmlBeanFactory;  
import org.springframework.core.io.ClassPathResource;  
import org.springframework.core.io.Resource;  

public class Test {
	
	public static void main(String[] args) {  
	    Resource resource=new ClassPathResource("applicationContext.xml");  
	    BeanFactory factory=new XmlBeanFactory(resource);  
	      
	    Student student=(Student)factory.getBean("studentbean");  
	    student.displayInfo();  
	}  

}

//Dependency Injection essentially means that we inject the dependency into the program without having to recreate/copy the entire class into the program.

