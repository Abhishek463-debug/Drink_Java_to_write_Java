public class TypeCasting {
    

    public static void main(String[] args){

        int a = 10, b =15;
       // String a1 = (String) a;
      // a = (Integer) a;

        System.out.println((Integer)a + b);
        System.out.println((double) a + (double) b);
        //
        //String d = Integer.toString(a);

        System.out.println( Integer.toString(a) + (double) b);
        
        Object c = 10, d  =15;
      
        
      System.out.println((String) c + d);
      
    }
}


////output:
  // 25
  //25.0
  //1015.0
  //1015.0


//Rules: The type to be casted must be a super or sub class of the previous type.
         Subclass -> Superclass is implicit (A double is an int, but an int is not a double). So changing from double to int is implicitly done.
         Superclass -> Subclass is explicit (An int is not a double) -> Changing required explicit casting ... int a = 10; double b = (double) a;
